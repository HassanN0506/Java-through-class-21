Constructors in Java:
-Constructors in Java are special blocks of code similar to methods that initialize the objects of a class.

Rules:
-They don't have return type, not even Void.
-Name of the constructor must be the same as the name of the class.
-Constructors cannot have non-access modifiers like static, final, etc.
-We can use the access modifiers like Public, Private, Protected with constructors.
-If we don't write a constructor in a class, a default constructor is provided by the compiler.
    (Compiler converts Java code into Byte code)
-We can have multiple constructors in a class, but their number of arguments, sequence of arguments,
or type of arguments should be different.
-If we have multiple constructors, then Java decides which constructor to call based on the parameters we pass.


"this" keyword:
It is a reserved keyword in Java that we can use to refer to instance variables, methods, or constructors of a class.
Uses:
1) "this" keyword is used to distinguish between instance variables and local variables
2) We can use "this" keyword to call the constructor of a class inside another constructor
3) We can use "this" keyword to call the methods of a class

Rules:
1) "this()" (constructor chaining), if used, it should be the FIRST line inside the constructor.
2) "this()" can't be used inside methods.

When constructor chaining, this(), it's the same as calling a method, except we put the parameters
of the constructor we are calling/chaining inside the parenthesis

========================================================================================================================
Inheritance:
